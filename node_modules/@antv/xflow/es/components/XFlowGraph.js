import React, { useContext, useRef, useEffect, useLayoutEffect, } from 'react';
import { GraphContext } from '../context/GraphContext';
import { Graph } from '@antv/x6';
import { Util } from '../util';
const XFlowGraph = (props) => {
    const container = useRef(null);
    const { graph, setGraph } = useContext(GraphContext);
    useEffect(() => {
        const graph = new Graph(Object.assign({ container: container.current, autoResize: true }, props.configs));
        setGraph(graph);
    }, []);
    useLayoutEffect(() => {
        if (graph && props.data.length > 0) {
            const { data, defaultNodeOptions, defaultEdgeOptions, centerContent } = props;
            const model = Util.preprocess(data, defaultNodeOptions, defaultEdgeOptions);
            graph.fromJSON(model);
            if (centerContent) {
                graph.centerContent();
            }
        }
    }, [graph, props.data]);
    return (React.createElement("div", { style: { width: '100%', height: '100%' } },
        React.createElement("div", { ref: container, style: { width: '100%', height: '100%' } })));
};
export default XFlowGraph;
//# sourceMappingURL=XFlowGraph.js.map
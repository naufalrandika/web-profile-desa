"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Minimap = void 0;
const react_1 = __importStar(require("react"));
const x6_plugin_minimap_1 = require("@antv/x6-plugin-minimap");
const graph_1 = require("../../hooks/graph");
const Minimap = (props) => {
    const graph = (0, graph_1.useGraph)();
    const mapRef = (0, react_1.useRef)(null);
    const initMinimap = (0, react_1.useCallback)(() => {
        if (mapRef.current && graph) {
            const options = Object.assign(Object.assign({}, props), { container: mapRef.current });
            const minimap = graph.getPlugin(x6_plugin_minimap_1.MiniMap.name);
            if (minimap) {
                minimap.dispose();
                // TODO: add setOption function
                // minimap.setOptions(options)
                minimap.init(graph);
            }
            else {
                const minimap = new x6_plugin_minimap_1.MiniMap(options);
                minimap.init(graph);
                graph.use(minimap);
            }
        }
    }, [mapRef, props, graph]);
    (0, react_1.useEffect)(() => {
        if (graph) {
            initMinimap();
        }
    }, [mapRef, graph]);
    return react_1.default.createElement("div", { ref: mapRef });
};
exports.Minimap = Minimap;
//# sourceMappingURL=index.js.map
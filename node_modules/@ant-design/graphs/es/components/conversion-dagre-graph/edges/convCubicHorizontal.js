var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import G6 from '@antv/g6';
import baseEdge from './baseEdge';
// 自定义转化边
export var registerConvCubicHorizontal = function () {
    G6.registerEdge('conv-cubic-horizontal', __assign(__assign({}, baseEdge), { draw: function (cfg, group) {
            var startPoint = cfg.startPoint, endPoint = cfg.endPoint;
            var hgap = Math.abs(endPoint.y - startPoint.y);
            // 水平三阶贝塞尔曲线，两端留4px的汇总直线
            var path = [
                ['M', startPoint.x, startPoint.y],
                ['L', startPoint.x + 4, startPoint.y],
                [
                    'C',
                    startPoint.x < endPoint.x ? startPoint.x + hgap / 2 : startPoint.x - hgap / 2,
                    startPoint.y,
                    startPoint.x < endPoint.x ? endPoint.x - hgap / 2 : endPoint.x + hgap / 2,
                    endPoint.y,
                    endPoint.x - 15,
                    endPoint.y,
                ],
                ['L', endPoint.x, endPoint.y],
            ];
            return baseEdge.draw(cfg, group, path);
        } }));
};

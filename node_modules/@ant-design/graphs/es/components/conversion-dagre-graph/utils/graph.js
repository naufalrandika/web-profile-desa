// 获取节点的所有出/入路径的边集合
export var getInOutPathEdges = function (id, edges) {
    var relativeInEdges = [];
    var relativeOutEdges = [];
    var queriedNodeIds = new Set([id]);
    // 查询节点的一度入度边 + 出度边
    var queryOneDegreeEdges = function (inNodeIds, outNodeIds) {
        var inNodeIdSet = new Set();
        var outNodeIdSet = new Set();
        edges === null || edges === void 0 ? void 0 : edges.forEach(function (edge) {
            // 查找入边
            if (inNodeIds.has(edge.target)) {
                relativeInEdges.push(edge);
                if (!queriedNodeIds.has(edge.source)) {
                    inNodeIdSet.add(edge.source);
                }
            }
            else if (outNodeIds.has(edge.source)) {
                // 查找出边
                relativeOutEdges.push(edge);
                if (!queriedNodeIds.has(edge.target)) {
                    outNodeIdSet.add(edge.target);
                }
            }
        });
        if (inNodeIdSet.size > 0 || outNodeIdSet.size > 0) {
            queryOneDegreeEdges(inNodeIdSet, outNodeIdSet);
        }
    };
    queryOneDegreeEdges(new Set([id]), new Set([id]));
    return {
        relativeInEdges: relativeInEdges,
        relativeOutEdges: relativeOutEdges,
    };
};

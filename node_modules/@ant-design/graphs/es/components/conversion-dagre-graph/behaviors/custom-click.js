var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import G6 from '@antv/g6';
import { setItemState, paintOnce, resetBaseStates } from '../utils';
import { ITEM_STATE } from '../types';
G6.registerBehavior('conv-click', {
    getDefaultCfg: function () {
        return {
            multiple: false, // 是否支持多选
        };
    },
    getEvents: function () {
        return {
            'node:click': 'onNodeClick',
            'canvas:click': 'onCanvasClick',
            'edge:click': 'onEdgeClick',
        };
    },
    handleNodeDetailInfoClick: function (event) {
        var shape = event.target;
        // click节点详情icon时emit事件，用于节点详情的弹窗的展示和隐藏
        if (shape.get('name') === 'node-detail-info-icon') {
            this.graph.emit('node:detailinfoclick', __assign(__assign({}, event), { type: 'node:detailinfoclick', name: 'node:detailinfoclick' }));
        }
        else {
            this.graph.emit('node:otherareaclick', __assign(__assign({}, event), { type: 'node:otherareaclick', name: 'node:otherareaclick' }));
        }
    },
    onNodeClick: function (event) {
        this.handleNodeDetailInfoClick(event);
        var currentNode = event.item;
        var graph = this.graph;
        // 获取之前的选中状态
        var isSelected = currentNode.hasState(ITEM_STATE.Selected);
        paintOnce(graph, function () {
            resetBaseStates(graph);
            // 设置最新选中状态
            setItemState(graph, currentNode, ITEM_STATE.Selected, !isSelected);
            // 重绘节点相关的边，暂时不做
            // refreshRelatedEdges(currentNode);
        });
    },
    onEdgeClick: function (event) {
        var currentEdge = event.item;
        var graph = this.graph;
        // 获取之前的选中状态
        var isSelected = currentEdge.hasState(ITEM_STATE.Selected);
        paintOnce(graph, function () {
            resetBaseStates(graph);
            // 设置最新选中状态
            setItemState(graph, currentEdge, ITEM_STATE.Selected, !isSelected);
        });
    },
    onCanvasClick: function () {
        var graph = this.graph;
        // 点击画布，重置元素状态为初始值
        paintOnce(graph, function () {
            resetBaseStates(graph);
        });
    },
});

import { measureItem, PlainObject, OriginNode, OriginEdge } from './propsAndState';
export declare enum EdgeType {
    CONV_LINE = "conv-line",
    CONV_CUBIC_VERTICAL = "conv-cubic-vertical",
    CONV_CUBIC_HORIZONTAL = "conv-cubic-horizontal"
}
export declare enum ITEM_STATE {
    Active = "active",
    Default = "default",
    Selected = "selected"
}
export interface GraphNode {
    id: string;
    label: string;
    layer: number;
    custom: {
        layerName: string;
        measure: measureItem;
        relatedMeasures?: measureItem[];
        compareMeasures?: measureItem[];
        [key: string]: any;
    };
    style: PlainObject;
    data: OriginNode;
    x?: number;
    y?: number;
}
export interface GraphEdge {
    id: string;
    source: string;
    target: string;
    label: string;
    style: PlainObject;
    custom: {
        ratio: number;
        showRatio: string;
        [key: string]: any;
    };
    data: OriginEdge;
}
export interface ConvGraphData {
    nodes: GraphNode[];
    edges: GraphEdge[];
}
